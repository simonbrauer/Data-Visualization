age.lab <- c("0-4", "5-9", "10-14", "15-19", "20-24",
"25-29", "30-34", "35-39", "40-44", "45-49",
"50-54", "55-59", "60-64", "65-69", "70-74",
"75-79", "80-84", "85 and up")
age.levels <- c("0â4 Years", "5â9 Years", "10â14 Years",
"15â19 Years", "20â24 Years",
"25â29 Years", "30â34 Years",
"35â39 Years", "40â44 Years",
"45â49 Years", "50â54 Years",
"55â59 Years", "60â64 Years",
"65â69 Years", "70â74 Years",
"75â79 Years", "80â84 Years",
"85 Years And Over")
dat.w$Age <- factor(dat.w$Age, levels = age.levels, ordered = TRUE)
p0 <- ggplot(dat.w, aes(x = Age,
ymax = Diff,
ymin = 1,
group = Electorate,
color = pos))
p1 <- p0 + geom_linerange(size=1.2) +
labs(x="",
y="Ratio of Male to Female Population",
color="Sex Composition") +
scale_color_manual(labels = c("Majority Female", "Majority Male"),
values=c("#E69F00", "#0072B2")) +
scale_x_discrete(labels=age.lab) +
scale_y_continuous(breaks=c(0.6, 0.8, 1, 1.2), labels=pct.labs) +
coord_flip() +
theme_minimal() +
theme(axis.text.y = element_text(size = 6),
axis.text.x = element_text(size = 6)) +
theme(legend.position="top") + facet_wrap(~ Electorate, ncol = 4)
cairo_pdf(file="figures/nz-surplus-males.pdf", height=30, width=6)
print(p1)
dev.off()
ggsave(
"figures/nz-surplus-males.png",
p1,
width=6,
height=30,
dpi=300
)
dat.w$age
dat.w$Age
?fileEncoding
??fileEncoding
rm(list = ls())
dat <- read.csv("data/electorates2.csv",
row.names = 1)
dat.w <- spread(dat, Sex, count)
dat.w$Pop <- dat.w$Male + dat.w$Female
dat.w$Diff <- dat.w$Male / dat.w$Female
dat.w$pMale <- (dat.w$Male /  (dat.w$Male + dat.w$Female))
dat.w$pFemale <- (dat.w$Female /  (dat.w$Male + dat.w$Female))
dat.w$pDiff <- dat.w$pMale - dat.w$pFemale
dat.w$pos <- dat.w$Diff > 1
dat.w$Electorate <- reorder(dat.w$Electorate, dat.w$Diff, order=TRUE)
pct.labs <- c("0.6", "0.8", "1", "1.2")
age.lab <- c("0-4", "5-9", "10-14", "15-19", "20-24",
"25-29", "30-34", "35-39", "40-44", "45-49",
"50-54", "55-59", "60-64", "65-69", "70-74",
"75-79", "80-84", "85 and up")
age.levels <- c("0â4 Years", "5â9 Years", "10â14 Years",
"15â19 Years", "20â24 Years",
"25â29 Years", "30â34 Years",
"35â39 Years", "40â44 Years",
"45â49 Years", "50â54 Years",
"55â59 Years", "60â64 Years",
"65â69 Years", "70â74 Years",
"75â79 Years", "80â84 Years",
"85 Years And Over")
dat.w$Age <- factor(dat.w$Age, levels = age.levels, ordered = TRUE)
p0 <- ggplot(dat.w, aes(x = Age,
ymax = Diff,
ymin = 1,
group = Electorate,
color = pos))
p1 <- p0 + geom_linerange(size=1.2) +
labs(x="",
y="Ratio of Male to Female Population",
color="Sex Composition") +
scale_color_manual(labels = c("Majority Female", "Majority Male"),
values=c("#E69F00", "#0072B2")) +
scale_x_discrete(labels=age.lab) +
scale_y_continuous(breaks=c(0.6, 0.8, 1, 1.2), labels=pct.labs) +
coord_flip() +
theme_minimal() +
theme(axis.text.y = element_text(size = 6),
axis.text.x = element_text(size = 6)) +
theme(legend.position="top") + facet_wrap(~ Electorate, ncol = 4)
cairo_pdf(file="figures/nz-surplus-males.pdf", height=30, width=6)
print(p1)
dev.off()
ggsave(
"figures/nz-surplus-males.png",
p1,
width=6,
height=30,
dpi=300
)
dat.w$Age
dat <- read.csv("data/electorates2.csv",
row.names = 1)
dat.w <- spread(dat, Sex, count)
dat.w$Pop <- dat.w$Male + dat.w$Female
dat.w$Diff <- dat.w$Male / dat.w$Female
dat.w$pMale <- (dat.w$Male /  (dat.w$Male + dat.w$Female))
dat.w$pFemale <- (dat.w$Female /  (dat.w$Male + dat.w$Female))
dat.w$pDiff <- dat.w$pMale - dat.w$pFemale
dat.w$pos <- dat.w$Diff > 1
dat.w$Electorate <- reorder(dat.w$Electorate, dat.w$Diff, order=TRUE)
pct.labs <- c("0.6", "0.8", "1", "1.2")
age.lab <- c("0-4", "5-9", "10-14", "15-19", "20-24",
"25-29", "30-34", "35-39", "40-44", "45-49",
"50-54", "55-59", "60-64", "65-69", "70-74",
"75-79", "80-84", "85 and up")
age.levels <- c("0â4 Years", "5â9 Years", "10â14 Years",
"15â19 Years", "20â24 Years",
"25â29 Years", "30â34 Years",
"35â39 Years", "40â44 Years",
"45â49 Years", "50â54 Years",
"55â59 Years", "60â64 Years",
"65â69 Years", "70â74 Years",
"75â79 Years", "80â84 Years",
"85 Years And Over")
dat.w$Age <- factor(dat.w$Age, levels = age.levels, ordered = TRUE)
p0 <- ggplot(dat.w, aes(x = Age,
ymax = Diff,
ymin = 1,
group = Electorate,
color = pos))
p1 <- p0 + geom_linerange(size=1.2) +
labs(x="",
y="Ratio of Male to Female Population",
color="Sex Composition") +
scale_color_manual(labels = c("Majority Female", "Majority Male"),
values=c("#E69F00", "#0072B2")) +
scale_x_discrete(labels=age.lab) +
scale_y_continuous(breaks=c(0.6, 0.8, 1, 1.2), labels=pct.labs) +
coord_flip() +
theme_minimal() +
theme(axis.text.y = element_text(size = 6),
axis.text.x = element_text(size = 6)) +
theme(legend.position="top") + facet_wrap(~ Electorate, ncol = 4)
cairo_pdf(file="figures/nz-surplus-males.pdf", height=30, width=6)
print(p1)
dev.off()
ggsave(
"figures/nz-surplus-males.png",
p1,
width=6,
height=30,
dpi=300
)
p1
dat <- read.csv("data/electorates3.csv",
row.names = 1)
dat.w <- spread(dat, Sex, count)
dat.w$Pop <- dat.w$Male + dat.w$Female
dat.w$Diff <- dat.w$Male / dat.w$Female
dat.w$pMale <- (dat.w$Male /  (dat.w$Male + dat.w$Female))
dat.w$pFemale <- (dat.w$Female /  (dat.w$Male + dat.w$Female))
dat.w$pDiff <- dat.w$pMale - dat.w$pFemale
dat.w$pos <- dat.w$Diff > 1
dat.w$Electorate <- reorder(dat.w$Electorate, dat.w$Diff, order=TRUE)
pct.labs <- c("0.6", "0.8", "1", "1.2")
age.lab <- c("0-4", "5-9", "10-14", "15-19", "20-24",
"25-29", "30-34", "35-39", "40-44", "45-49",
"50-54", "55-59", "60-64", "65-69", "70-74",
"75-79", "80-84", "85 and up")
age.levels <- c("0â4 Years", "5â9 Years", "10â14 Years",
"15â19 Years", "20â24 Years",
"25â29 Years", "30â34 Years",
"35â39 Years", "40â44 Years",
"45â49 Years", "50â54 Years",
"55â59 Years", "60â64 Years",
"65â69 Years", "70â74 Years",
"75â79 Years", "80â84 Years",
"85 Years And Over")
dat.w$Age <- factor(dat.w$Age, levels = age.levels, ordered = TRUE)
p0 <- ggplot(dat.w, aes(x = Age,
ymax = Diff,
ymin = 1,
group = Electorate,
color = pos))
p1 <- p0 + geom_linerange(size=1.2) +
labs(x="",
y="Ratio of Male to Female Population",
color="Sex Composition") +
scale_color_manual(labels = c("Majority Female", "Majority Male"),
values=c("#E69F00", "#0072B2")) +
scale_x_discrete(labels=age.lab) +
scale_y_continuous(breaks=c(0.6, 0.8, 1, 1.2), labels=pct.labs) +
coord_flip() +
theme_minimal() +
theme(axis.text.y = element_text(size = 6),
axis.text.x = element_text(size = 6)) +
theme(legend.position="top") + facet_wrap(~ Electorate, ncol = 4)
cairo_pdf(file="figures/nz-surplus-males.pdf", height=30, width=6)
print(p1)
dev.off()
ggsave(
"figures/nz-surplus-males.png",
p1,
width=6,
height=30,
dpi=300
)
p1
?purl
?get.csv
organs.url <- "http://raw.githubusercontent.com/socviz/soc880/gh-pages/data/organ-procurement.csv"
organs.data <- read.csv(url(organs.url))
library(knittr)
library(knitr)
?purl
getwd()
purl(healy.rmd)
purl("healy.rmd")
install(GGally)
install.packages("GGally")
head(organs.data)
y.vars <- c("donors", "pop", "gdp", "pubhealth", "assault")
pdf(file = "../figures/ggpairs-plot-1.pdf", height = 15, width = 20)
p <- ggpairs(subset(organs.data, select = my.vars),
upper = list(continuous = "smooth"),
lower = list(continuous = "points"))
print(p)
getwd()
?setwd
setwd("C:/Users/Simon/OneDrive/Documents/Github/Data-Visualization/Class 4")
getwd
getwd()
setwd("C:/Users/Simon/OneDrive/Documents/Github/Data-Visualization/Class 4/")
pdf(file = "../Figures/ggpairs-plot-1.pdf", height = 15, width = 20)
pdf(file = "ggpairs-plot-1.pdf", height = 15, width = 20)
pdf(file = "Figures/ggpairs-plot-1.pdf", height = 15, width = 20)
p <- ggpairs(subset(organs.data, select = my.vars),
upper = list(continuous = "smooth"),
lower = list(continuous = "points"))
print(p)
---
title: "Class 4"
author: "Simon G. Brauer"
date: "Tuesday, November 03, 2015"
output: html_document
---
```{r}
setwd("C:/Users/Simon/OneDrive/Documents/Github/Data-Visualization/Class 4/")
organs.url <- "https://raw.githubusercontent.com/socviz/soc880/gh-pages/data/organ-procurement.csv"
organs.data <- read.csv(url(organs.url), row.names=1)
dim(organs.data)
head(organs.data)
## For convenience, let R know year is a time measure.
organs.data$year <- as.Date(strptime(organs.data$year, format="%Y"))
library(GGally)
y.vars <- c("donors", "pop", "gdp", "pubhealth", "assault")
pdf(file = "Figures/ggpairs-plot-1.pdf", height = 15, width = 20)
p <- ggpairs(subset(organs.data, select = my.vars),
upper = list(continuous = "smooth"),
lower = list(continuous = "points"))
print(p)
setwd("C:/Users/Simon/OneDrive/Documents/Github/Data-Visualization/Class 4/")
organs.url <- "https://raw.githubusercontent.com/socviz/soc880/gh-pages/data/organ-procurement.csv"
organs.data <- read.csv(url(organs.url), row.names=1)
dim(organs.data)
head(organs.data)
## For convenience, let R know year is a time measure.
organs.data$year <- as.Date(strptime(organs.data$year, format="%Y"))
library(GGally)
my.vars <- c("donors", "pop.dens", "gdp", "pubhealth", "world", "consent.law", "assault", "opt")
pdf(file = "Figures/ggpairs-plot-2.pdf", height = 20, width = 20)
p <- ggpairs(subset(organs.data, select = my.vars),
upper = list(continuous = "smooth", combo = "box"),
lower = list(continuous = "points", combo = "dot"))
print(p)
dev.off()
my.vars <- c("donors", "pop.dens", "gdp", "pubhealth", "world", "consent.law", "opt")
pdf(file = "Figures/ggpairs-plot-2.pdf", height = 20, width = 20)
p <- ggpairs(subset(organs.data, select = my.vars),
upper = list(continuous = "smooth", combo = "box"),
lower = list(continuous = "points", combo = "dot"))
print(p)
dev.off()
ggpairs(subset(organs.data, select = my.vars),
upper = list(continuous = "smooth", combo = "box", discrete = "ratio"),
lower = list(continuous = "points", combo = "dot", discreate = "facetbar"))
ggpairs(subset(organs.data, select = my.vars),
upper = list(continuous = "smooth", combo = "box", discrete = "ratio"),
lower = list(continuous = "points", combo = "dot", discrete = "facetbar"))
ggpairs(subset(organs.data, select = c("world", "consent.law", "opt"), upper = list(discrete = "ratio"), lower = list(discrete = "facetbar")))
ggpairs(subset(organs.data, select = c("world", "consent.law", "opt"), upper = list(discrete = "ratio"), lower = list(discrete = "blank")))
ggpairs(subset(organs.data, select = c("world", "consent.law", "opt")), upper = list(discrete = "ratio"), lower = list(discrete = "blank")))
ggpairs(subset(organs.data, select = c("world", "consent.law", "opt")), upper = list(discrete = "ratio"), lower = list(discrete = "blank"))
ggpairs(subset(organs.data, select = c("world", "consent.law", "opt")), upper = list(discrete = "ratio"), lower = list(discrete = "blank"))
ggpairs(subset(organs.data, select = c("world", "consent.law", "opt")), upper = list(discrete = "facetbar"), lower = list(discrete = "blank"))
ggpairs(subset(organs.data, select = c("world", "consent.law", "opt")), upper = list(discrete = "facetbar"), lower = list(discrete = "blank"), diag = list(continuous = "blank", discrete = "blank"))
ggpairs(subset(organs.data, select = c("world", "consent.law", "opt")), upper = list(discrete = "facetbar"), lower = list(discrete = "blank"), diag = list(discrete = "blank"))
ggpairs(subset(organs.data, select = my.vars),
upper = list(continuous = "smooth", combo = "box", discrete = "ratio"),
lower = list(continuous = "points", combo = "dot", discrete = "facetbar"), color = opt)
ggpairs(subset(organs.data, select = my.vars),
upper = list(continuous = "smooth", combo = "box", discrete = "ratio"),
lower = list(continuous = "points", combo = "dot", discrete = "facetbar"), color = "opt")
my.vars <- c("donors", "pop.dens", "pdp", "pubhealth")
pdf(file = "Figures/myfigure.pdf", height = 20, width = 20)
p <- ggpairs(data = subset(organs.data, select = my.vars),
upper = list(continuous = "density"),
lower = list(continuous = "cor"),
color = "opt")
ggpairs(data = subset(organs.data, select = my.vars),
upper = list(continuous = "density"),
lower = list(continuous = "cor"),
color = "opt")
my.vars <- c("donors", "pop.dens", "gdp", "pubhealth")
p <- ggpairs(data = subset(organs.data, select = my.vars),
upper = list(continuous = "density"),
lower = list(continuous = "cor"),
color = "opt")
print(p)
dev.off()
ggpairs(data = subset(organs.data, select = my.vars),
upper = list(continuous = "density"),
lower = list(continuous = "cor"),
color = "organs.data$opt")
ggpairs(data = subset(organs.data, select = my.vars),
upper = list(continuous = "density"),
lower = list(continuous = "cor"))
print(p)
dev.off()
dev.off()
print(p)
dev.off()
p <- ggpairs(data = subset(organs.data, select = my.vars),
upper = list(continuous = "density"),
lower = list(continuous = "cor"))
print(p)
dev.off()
pdf(file = "Figures/myfigure.pdf", height = 20, width = 20)
p <- ggpairs(data = subset(organs.data, select = my.vars),
upper = list(continuous = "density"),
lower = list(continuous = "cor"))
print(p)
dev.off()
fun1 <- c(1, 2, 3)
fun2 <- c(1, 2, 4)
fun1 & fun2
fun1 <- c(TRUE, TRUE FALSE)
fun1 <- c(TRUE, TRUE, FALSE)
fun1
fun2 <- rep(TRUE, 3)
fun2
fun1 & fun2
fun1 && fun2
install.packages("Hmisc")
install.packages("rms")
vc <- varclus(~donors + pop.dens + gdp + pubhealth + assault + world + consent.law, data = organs.data)
library(Hmisc)
library(rms)
vc <- varclus(~donors + pop.dens + gdp + pubhealth + assault + world + consent.law, data = organs.data)
plot(vc)
plot(naclus(organs.data))
test.data <- organs.data
test.data$opt[sample(1:nrow(test.data), size = 100, replace = FALSE), ] <- NA
test.data$opt[sample(1:nrow(test.data), size = 100, replace = FALSE)] <- NA
test.data$health[is.NA(test.data$opt),] <- NA
test.data$health[is.na(test.data$opt),] <- NA
test.data$health[is.na(test.data$opt)] <- NA
plot(naclus(organs.data))
plot(naclus(test.data))
s <- summary(donors ~ pop.dens + gdp + pubhealth + assault + world + consent.law,
data=organs.data)
plot(s, cex.labels = 0.6)
out.lm <- lm(donors ~ pop.dens + gdp + pubhealth + assault + consent.law,
data=organs.data)
summary(out.lm)
test.data$country[sample(1:nrow(test.data), size = 100, replace = FALSE)] <- NA
plot(naclus(test.data))
class(out.lm)
s
summary(donors)
summary(donors, data = organs.data)
summary(donors ~ gdp, data = organs.data)
str(lm.out)
str(out.lm)
plot(out.lm)
plot(out.lm, which = 3)
plot(out.lm, which = 4)
plot(out.lm, which = 5)
plot(out.lm, which = 6)
plot(out.lm, which = 7)
plot(out.lm, which = 1)
plot(out.lm, which = 2)
plot(out.lm, which = 3)
plot(out.lm, which = 4)
out.ols <- ols(donors ~ pop.dens + gdp + pubhealth + assault + consent.law, data = organs.data)
d <- datadist(organs.data)
options(datadist="d")
options(digits = 2)
plot(summary(out.ols))
install.packages("broom")
library(broom)
out.lm ,- lm(pubhealth ~ pop.dens + gdp + country, data = organs.data)
summary(out.lm)
plot(out.lm)
out.tidy <- tidy(out.lm, conf.int = TRUE)
class(out.tidy)
head(out.tidy)
out.aug <- augment(out.lm)
head(out.aug)
p <- ggplot(out.tidy, aes(y=estimate,
x=reorder(term, estimate)))
p + geom_pointrange(aes(ymin=conf.low,
ymax=conf.high)) +
geom_hline() +
coord_flip()
install.packages("survival")
install.packages("survival")
---
title: "Class 4"
author: "Simon G. Brauer"
date: "Tuesday, November 03, 2015"
output: html_document
---
```{r}
setwd("C:/Users/Simon/OneDrive/Documents/Github/Data-Visualization/Class 4/")
organs.url <- "https://raw.githubusercontent.com/socviz/soc880/gh-pages/data/organ-procurement.csv"
organs.data <- read.csv(url(organs.url), row.names=1)
dim(organs.data)
head(organs.data)
## For convenience, let R know year is a time measure.
organs.data$year <- as.Date(strptime(organs.data$year, format="%Y"))
library(GGally)
my.vars <- c("donors", "pop", "gdp", "pubhealth", "assault")
```
We can start saving our graphics to external files. Generally, use PDF's for scalable, memory-efficient images.
Also keep in mind that you need to open AND close the printing device.
```{r}
pdf(file = "Figures/ggpairs-plot-1.pdf", height = 15, width = 20)
p <- ggpairs(subset(organs.data, select = my.vars),
upper = list(continuous = "smooth"),
lower = list(continuous = "dot"))
print(p)
setwd("C:/Users/Simon/OneDrive/Documents/Github/Data-Visualization/Class 4/")
organs.url <- "https://raw.githubusercontent.com/socviz/soc880/gh-pages/data/organ-procurement.csv"
organs.data <- read.csv(url(organs.url), row.names=1)
dim(organs.data)
head(organs.data)
## For convenience, let R know year is a time measure.
organs.data$year <- as.Date(strptime(organs.data$year, format="%Y"))
library(GGally)
my.vars <- c("donors", "pop", "gdp", "pubhealth", "assault")
pdf(file = "Figures/ggpairs-plot-1.pdf", height = 15, width = 20)
p <- ggpairs(subset(organs.data, select = my.vars),
upper = list(continuous = "smooth"),
lower = list(continuous = "dot"))
print(p)
dev.off()
my.vars <- c("donors", "pop.dens", "gdp", "pubhealth", "world", "consent.law", "opt")
pdf(file = "Figures/ggpairs-plot-2.pdf", height = 20, width = 20)
p <- ggpairs(subset(organs.data, select = my.vars),
upper = list(continuous = "smooth", combo = "box", discrete = "ratio"),
lower = list(continuous = "points", combo = "dot", discrete = "facetbar"))
print(p)
dev.off()
my.vars <- c("donors", "pop.dens", "gdp", "pubhealth")
pdf(file = "Figures/myfigure.pdf", height = 20, width = 20)
p <- ggpairs(data = subset(organs.data, select = my.vars),
upper = list(continuous = "density"),
lower = list(continuous = "cor"))
print(p)
dev.off()
library(Hmisc)
library(rms)
vc <- varclus(~donors + pop.dens + gdp + pubhealth + assault + world + consent.law, data = organs.data)
plot(vc)
###naclus does a cluster analysis of missing data; i.e. which variables share missing data?
plot(naclus(organs.data))
s <- summary(donors ~ pop.dens + gdp + pubhealth + assault + world + consent.law,
data=organs.data)
plot(s, cex.labels = 0.6)
out.lm <- lm(donors ~ pop.dens + gdp + pubhealth + assault + consent.law,
data=organs.data)
summary(out.lm)
out.ols <- ols(donors ~ pop.dens + gdp + pubhealth + assault + consent.law, data = organs.data)
d <- datadist(organs.data)
options(datadist="d")
options(digits = 2)
plot(summary(out.ols))
library(broom)
out.lm ,- lm(pubhealth ~ pop.dens + gdp + country, data = organs.data)
summary(out.lm)
###Create a data frame, but with high and low confidence intervals as columns
out.tidy <- tidy(out.lm, conf.int = TRUE)
class(out.tidy)
head(out.tidy)
###Augment does the same thing but for the entire data frame
out.aug <- augment(out.lm)
head(out.aug)
p <- ggplot(out.tidy, aes(y=estimate,
x=reorder(term, estimate)))
p + geom_pointrange(aes(ymin=conf.low,
ymax=conf.high)) +
geom_hline() +
coord_flip()
library(survival)
out.surv <- survfit(coxph(Surv(time, status) ~ age + sex, data=lung))
out.tidy <- tidy(out.surv)
p <- ggplot(out.tidy, aes(time, estimate))
p + geom_line() +
geom_ribbon(aes(ymin = conf.low, ymax = conf.high), alpha = .2)
```
